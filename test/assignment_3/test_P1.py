#################################
### DO NOT EDIT THIS FILE !!! ###
#################################
"""
Do not edit this file; it is used
by the autograder.  However, you
are welcome and encouraged to
write your own testing code in 
the main file or in your own file.
"""
import pytest
from lists import Stack

######  Problem #1 #########################

def test_P1_create_empty_stack():
    s = Stack()
    assert s.isEmpty() == True

def test_P1_create_nonempty_stack():
    s = Stack()
    s.push("test")
    assert s.isEmpty() == False

def test_P1_one_element_stack():
    s = Stack()
    s.push("test")
    assert s.pop() == "test"

def test_P1_pop_removes_element():
    s = Stack()
    s.push("test")
    s.pop()
    assert s.isEmpty() == True

def test_P1_pop_from_empty():
    s = Stack()
    with pytest.raises(Exception):
        s.pop()

def test_P1_pop_from_end():
    s = Stack()
    s.push(1)
    s.push(2)
    s.push(3)
    s.push(4)
    assert s.pop() == 4   

def test_P1_size():
    s = Stack()
    s.push(1)
    s.push(2)
    s.push(3)
    s.push(4)
    s.pop()
    assert s.size() == 3

def test_P1_peek():
    s = Stack()
    s.push(1)
    s.push(2)
    s.push(3)
    s.push(4)
    s.pop()
    assert s.peek() == 3

def test_P1_peek_doesnt_remove():
    s = Stack()
    s.push(1)
    s.push(2)
    s.push(3)
    s.push(4)
    s.push(5)
    s.peek()
    assert s.size() == 5


